<UserControl x:Class="MyWPF1.ImageEnhancementPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:MyWPF1" xmlns:models="clr-namespace:MyWPF1.Models"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:viewModels="clr-namespace:MyWPF1.ViewModels"
             mc:Ignorable="d" 
      xmlns:winforms="clr-namespace:System.Windows.Forms.Integration;assembly=WindowsFormsIntegration"
      xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
      xmlns:ctrl="clr-namespace:MyWPF1.Controls"
             d:DesignHeight="450" d:DesignWidth="800" Background="AntiqueWhite">
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <ContentControl x:Name="SettingsContainer">
            <ContentControl.ContentTemplate>
                <DataTemplate>
                    <ContentPresenter Content="{TemplateBinding Content}">
                        <ContentPresenter.RenderTransform>
                            <TranslateTransform X="300"/>
                        </ContentPresenter.RenderTransform>
                        <ContentPresenter.Triggers>
                            <EventTrigger RoutedEvent="ContentPresenter.Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                    Storyboard.TargetProperty="RenderTransform.X"
                                    From="300" To="0" 
                                    Duration="0:0:0.3"
                                    DecelerationRatio="0.6"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ContentPresenter.Triggers>
                    </ContentPresenter>
                </DataTemplate>
            </ContentControl.ContentTemplate>
        </ContentControl>
        <Border Background="Beige" Grid.Row="0"></Border>
        <TextBlock Grid.Row="0" Text="Gamma校正" FontWeight="Bold" FontSize="16"
                       Margin="0,0" Height="20" Width="120"
                       HorizontalAlignment="Left" VerticalAlignment="Top">
            <TextBlock.Background>
                <DrawingBrush>
                    <DrawingBrush.Drawing>
                        <GeometryDrawing>
                            <GeometryDrawing.Geometry>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,0" IsClosed="True">
                                        <!-- 左侧直线 -->
                                        <LineSegment Point="80,0"/>
                                        <!-- 右侧弧线 -->
                                        <ArcSegment Point="80,20"
                                            Size="10,10"
                                            SweepDirection="Clockwise"
                                            RotationAngle="90"/>
                                        <!-- 底部直线 -->
                                        <LineSegment Point="0,20"/>
                                    </PathFigure>
                                </PathGeometry>
                            </GeometryDrawing.Geometry>
                            <GeometryDrawing.Brush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <GradientStop Color="#4DACFF" Offset="0"/>
                                    <GradientStop Color="#0080FF" Offset="1"/>
                                </LinearGradientBrush>
                            </GeometryDrawing.Brush>
                        </GeometryDrawing>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </TextBlock.Background>
        </TextBlock>
        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" Margin="15,5">
                <TextBlock Text="Gamma值：" Width="80" VerticalAlignment="Center"/>
                <Slider Minimum="0.1" Maximum="10" VerticalAlignment="Center"
                        Width="120" Value="{Binding Gamma, 
                        Mode=TwoWay, 
                        UpdateSourceTrigger=PropertyChanged}"/>
                <ctrl:NumericUpDown Value="{Binding Gamma, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Increment="0.05" Width="55" Height="25"/>
            </StackPanel>
            <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Margin="15,5">
                <TextBlock Text="偏移量：" Width="80" VerticalAlignment="Center"/>
                <Slider Minimum="0" Maximum="5" VerticalAlignment="Center"
                        Width="120" Value="{Binding Offset, 
                        Mode=TwoWay, 
                        UpdateSourceTrigger=PropertyChanged}"/>
                <ctrl:NumericUpDown Value="{Binding Offset, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Increment="0.05" Width="55" Height="25"/>
            </StackPanel>
            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Margin="15,5">
                <TextBlock Text="阈值：" Width="80" VerticalAlignment="Center"/>
                <Slider Minimum="0" Maximum="5" VerticalAlignment="Center"
                        Width="120" Value="{Binding Threshold, 
                        Mode=TwoWay, 
                        UpdateSourceTrigger=PropertyChanged}"/>
                <ctrl:NumericUpDown Value="{Binding Threshold, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Increment="0.05" Width="55" Height="25"/>
            </StackPanel>
            <Grid Grid.Row="1" Grid.Column="1" Margin="15,5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <CheckBox Content="正向Gamma校正" Grid.Row="0"
                      IsChecked="{Binding Encode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Margin="5,5" VerticalAlignment="Center"/>
                <CheckBox Content="启用Gamma校正" Grid.Row="1"
                      IsChecked="{Binding EnableGamma, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Margin="5,5" VerticalAlignment="Center"/>
            </Grid>
        </Grid>
        <Grid Grid.Row="1" Background="Beige" Margin="0,5">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ContentControl>
                <ContentControl.ContentTemplate>
                    <DataTemplate>
                        <ContentPresenter Content="{TemplateBinding Content}">
                            <ContentPresenter.RenderTransform>
                                <TranslateTransform X="300"/>
                            </ContentPresenter.RenderTransform>
                            <ContentPresenter.Triggers>
                                <EventTrigger RoutedEvent="ContentPresenter.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation 
                                    Storyboard.TargetProperty="RenderTransform.X"
                                    From="300" To="0" 
                                    Duration="0:0:0.3"
                                    DecelerationRatio="0.6"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ContentPresenter.Triggers>
                        </ContentPresenter>
                    </DataTemplate>
                </ContentControl.ContentTemplate>
            </ContentControl>
            <Border Grid.Row="0"></Border>
            <TextBlock Grid.Row="0" Text="反锐化Mask" FontWeight="Bold" FontSize="16"
                       Margin="0,0" Height="20" Width="120"
                       HorizontalAlignment="Left" VerticalAlignment="Top">
                <TextBlock.Background>
                    <DrawingBrush>
                        <DrawingBrush.Drawing>
                            <GeometryDrawing>
                                <GeometryDrawing.Geometry>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0" IsClosed="True">
                                            <!-- 左侧直线 -->
                                            <LineSegment Point="80,0"/>
                                            <!-- 右侧弧线 -->
                                            <ArcSegment Point="80,20"
                                            Size="10,10"
                                            SweepDirection="Clockwise"
                                            RotationAngle="90"/>
                                            <!-- 底部直线 -->
                                            <LineSegment Point="0,20"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </GeometryDrawing.Geometry>
                                <GeometryDrawing.Brush>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <GradientStop Color="#4DACFF" Offset="0"/>
                                        <GradientStop Color="#0080FF" Offset="1"/>
                                    </LinearGradientBrush>
                                </GeometryDrawing.Brush>
                            </GeometryDrawing>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </TextBlock.Background>
            </TextBlock>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="15,5">
                <TextBlock Text="Mask大小：" Width="80" VerticalAlignment="Center"/>
                <ctrl:NumericUpDown Value="{Binding MaskSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Increment="2" Width="55" Height="25"/>
            </StackPanel>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="15,5">
                    <TextBlock Text="增强系数：" Width="80" VerticalAlignment="Center"/>
                    <Slider Minimum="0.5" Maximum="3" VerticalAlignment="Center"
                        Width="120" Value="{Binding Factor, 
                        Mode=TwoWay, 
                        UpdateSourceTrigger=PropertyChanged}"/>
                    <ctrl:NumericUpDown Value="{Binding Factor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Increment="0.05" Width="55" Height="25"/>
                </StackPanel>
                <CheckBox Content="启用反锐化Mask" Grid.Row="1"
                      IsChecked="{Binding EnableEmphasize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Margin="15,5" VerticalAlignment="Center"/>
            </Grid>

        </Grid>
    </Grid>
</UserControl>
